# generated by ZinjaI-w32-20180718
[general]
files_to_open=5
project_name=Cuenta Bancaria
help_page=
autocodes_file=
macros_file=
default_fext_source=cpp
default_fext_header=h
autocomp_extra=
active_configuration=Debug
version_saved=20180718
version_required=20130729
tab_width=4
tab_use_spaces=0
explorer_path=.
inherits_from=
current_source=main.cpp
path_char=\
[source]
path=Menu.cpp
cursor=32:8
open=true
[source]
path=Cuenta.cpp
cursor=42:0
open=true
[source]
path=main.cpp
cursor=13:28
open=true
[header]
path=Cuenta.h
cursor=14:11
open=true
[header]
path=Menu.h
cursor=17:21
open=true
[config]
name=Debug
toolchain=
toolchain_argument_0=${DEFAULT}
toolchain_argument_1=${DEFAULT}
toolchain_argument_2=${DEFAULT}
toolchain_argument_3=${DEFAULT}
toolchain_argument_4=${DEFAULT}
working_folder=
always_ask_args=0
args=
exec_method=0
exec_script=
env_vars=
wait_for_key=2
temp_folder=Debug
output_file=Debug\Cuenta Bancaria.exe
icon_file=
manifest_file=
compiling_extra=
macros=_DEBUG
warnings_level=2
warnings_as_errors=0
pedantic_errors=0
std_c=
std_cpp=c++14
debug_level=2
optimization_level=0
enable_lto=0
headers_dirs=
linking_extra=
libraries_dirs=
libraries=
strip_executable=0
console_program=1
dont_generate_exe=0
[config]
name=Release
toolchain=
toolchain_argument_0=${DEFAULT}
toolchain_argument_1=${DEFAULT}
toolchain_argument_2=${DEFAULT}
toolchain_argument_3=${DEFAULT}
toolchain_argument_4=${DEFAULT}
working_folder=
always_ask_args=0
args=
exec_method=0
exec_script=
env_vars=
wait_for_key=2
temp_folder=Release
output_file=Release\Cuenta Bancaria.exe
icon_file=
manifest_file=
compiling_extra=
macros=
warnings_level=2
warnings_as_errors=0
pedantic_errors=0
std_c=
std_cpp=c++14
debug_level=0
optimization_level=2
enable_lto=0
headers_dirs=
linking_extra=
libraries_dirs=
libraries=
strip_executable=2
console_program=1
dont_generate_exe=0
[custom_tools]
[end]

#include "Cuenta.h"
#include "Menu.h"
#include <iostream>

Cuenta::Cuenta(){
	numero = 0;
	clave = "";
	saldo = 0;
}

Cuenta::Cuenta(int numero,string clave,float saldo = 0){
	this -> numero = numero;
	this -> clave = clave;
	this -> saldo = saldo;
}

Cuenta::~Cuenta(){
}

bool Cuenta::retiro(float valor){
	bool Exito = false;
	if(valor <= saldo){
		saldo = saldo - valor;
		Exito = true;
	}return Exito;
	
}

float Cuenta::consignacion(float valor){
	return saldo += valor;
}

float Cuenta::consultar(){
	return saldo;
}


bool Cuenta::ingresar(int ID1, string clave1){
	if(ID1 == numero && clave1 == clave ){
		return true;
	}return false;
}

string Cuenta::cambiar(string nueva){
	this -> clave = nueva;
}


#ifndef Cuenta_h
#define Cuenta_h
#include <string>

using namespace std;

class Cuenta{
private:
	int numero;
	string clave;
	float saldo;
public:
	Cuenta();
	Cuenta(int numero,string clave,float saldo);
	~Cuenta();
	bool retiro(float valor);
	float consignacion(float valor);
	float consultar();
	bool ingresar(int ID,string clave1);
	string cambiar(string nueva);
};
#endif // Cuenta_h


#include <iostream>
#include "Cuenta.h"
#include "Menu.h"
using namespace std;

int main(){
	
	Cuenta C1;
	Menu M1;
	int opcion;
	
	M1.MenuRegistro(); system("pause");system("cls");
	
	if(M1.MenuIngresar() == 1){

	do{
	M1.MenuOpciones();
	cout<<"Ingrese Su opcion: "; cin>>opcion;
	switch(opcion){
	case 1: M1.MenuRetiro();system("pause");system("cls"); break;
	case 2: M1.MenuConsignacion(); system("pause");system("cls"); break;
	case 3: M1.MenuConsultar(); system("pause");system("cls"); break;
	case 4: M1.MenuCambiar(); system("pause");system("cls"); break;
	} 
	}while(opcion != 5);
	}
	
	
	
	return 0;
}

#include "Menu.h"
#include <iostream>

using namespace std;

Menu::Menu(){
	numero = 0;
	clave = "";
	saldo = 0;
}

Menu::Menu(int numero,string clave,float saldo,Cuenta* C1){
	this ->numero=numero;
	this->clave=clave;
	this->saldo=saldo;
	this->C1=C1;
}

Menu::~Menu(){
}

void Menu::MenuRegistro(){
	cout<<"Ingrese Su Numero a Registrar: "; cin>> numero;
	cout<<"Ingrese Su Clave a Registrar: "; cin>> clave;
	cout<<"Ingresu Su Saldo a Registrar: "; cin>> saldo;
	C1 = new Cuenta (numero,clave,saldo);
}

bool Menu::MenuIngresar(){
	cout<<"Digite Su Numero de Cuenta: "; cin>>numero;
	cout<<"Digite Su Clave: "; cin>>clave;
	
	return C1->ingresar(numero,clave);
	
}

void Menu::MenuOpciones(){
	cout<<"(1) Retiro de Efectivo "<<endl;
	cout<<"(2) Consignacion de Efectivo "<<endl;
	cout<<"(3) Consultar Efectivo "<<endl;
	cout<<"(4) Actualizar Contrase�a "<<endl;
	cout<<"(5) Salir ..."<<endl;

}


float Menu::MenuConsignacion(){
	float consignacion;
	cout<<"Digite Su Cantidad a Consignar: "; cin>> consignacion;
	cout<<"Su Saldo Total Mas Su Consignacion Es: "<<C1->consignacion(consignacion)<<endl;
}

string Menu::MenuCambiar(){
	string nueva;
	cout<<"Digite su contrase�a nueva: "; cin>> nueva;
	C1->cambiar(nueva);
	cout<<"Su Contrase�a Se A Cambiado correctamente ..."<<endl;
}

float Menu::MenuConsultar(){
	cout<<"Su Saldo Actual Se Encuentra Por los: "<<C1->consultar()<<endl;
}

bool Menu::MenuRetiro(){
	float valor;
	cout<<"Ingrese Su Valor a Retirar: "; cin>>valor;
	cout<<C1->retiro(valor)<<endl;
}

#ifndef Menu_h
#define Menu_h
#include <string>
#include "Cuenta.h"
using namespace std;

class Menu{
private:
	int numero;
	string clave;
	float saldo;
	Cuenta* C1;
public:
	Menu();
	Menu(int numero,string clave,float saldo,Cuenta* C1);
	~Menu();
	void MenuRegistro();
	bool MenuIngresar();
	void MenuOpciones();
	bool MenuRetiro();
	float MenuConsignacion();
	float MenuConsultar();
	string MenuCambiar();
};
#endif // Menu_h
